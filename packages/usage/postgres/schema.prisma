generator cs {
  provider        = "npx prisma-generator-entityframework"
  output          = "../csharp-integration-tests/csharp-integration-tests/model/postgres"
  namespace       = "PostgresTest"
  clientClassName = "PostgresClient"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost:5432/postgres"
}

model User {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  name    String?
  posts   Post[]
  comment Comment[]

  @@map("system_user")
}

model Post {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @map("created_at")
  creatorId Int       @map("creator_id")
  createdBy User      @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comment   Comment[]

  @@map("post")
}

model Comment {
  id        Int  @id @default(autoincrement())
  post      Post @relation(fields: [postId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  creator   User @relation(fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId    Int  @map("post_id")
  creatorId Int  @map("creator_id")

  @@map("comment")
}

model ShardMap {
  route       String
  country     String
  shard_index Int

  @@id(fields: [route, country])
}

model DbUuidType {
  id   String @id @default(uuid()) @db.Uuid
  data Int

  @@map("db_uuid_type")
}

model TextUuidType {
  id   String @id @default(uuid())
  data Int

  @@map("text_uuid_type")
}

model AllFieldsTest {
  id      Int    @id @default(autoincrement())
  ip_addr String @db.Inet
  guid    String @db.Uuid
  an_xml  String @db.Xml
  a_short Int    @db.SmallInt
  a_uint  Int    @db.Oid
  bit_arr String @db.Bit(2)
  uno_bit String @db.Bit
  bytes   Bytes
  json    Json   @db.Json
  jsonb   Json   @db.JsonB
}
